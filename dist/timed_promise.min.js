(()=>{'use strict';function a(d){return b.test(d.toString())}const b=/^function[\sA-Za-z0-9]*\(\s*\)\s*{\s*\[\s*native\s+code\s*\]\s*}\s*$/;class c extends Promise{constructor(d){let e={parent:null,created:new Date().getTime(),timeout:Infinity,timer:null,pending:!0,resolve:null,reject:null};super((f,g)=>{e.resolve=h=>{if(e.pending)return e.pending=!1,e.timer&&(clearTimeout(e.timer),e.timer=null),f(h)},e.reject=h=>{if(e.pending)return e.pending=!1,e.timer&&(clearTimeout(e.timer),e.timer=null),g(h)},a(d)?d(e.resolve,e.reject):d instanceof Promise?d.then(e.resolve,e.reject):setTimeout(()=>{d(e.resolve,e.reject,this.remaining())},0)}),this._timed_promise=e}timeout(d,e='timeout',f=!1){const g=this._timed_promise;return g&&g.pending&&this.remaining()>d&&(f&&g.parent&&g.parent.timeout&&g.parent.timeout(d,e,f),g.timeout=new Date().getTime()+d,g.timer&&clearTimeout(g.timer),g.timer=setTimeout(()=>{g.timer=null,g.reject(e)},d),!f&&g.parent&&g.parent.timeout&&g.parent.timeout(d,e,f)),this}created(){return this._timed_promise.created}elapsed(){return new Date().getTime()-this._timed_promise.created}remaining(){const d=this._timed_promise;return d.pending?d.timeout===Infinity?Infinity:Math.max(0,d.timeout-new Date().getTime()):0}then(d,e){const f=super.then(!d||a(d)?d:g=>d(g,this.remaining()),!e||a(e)?e:g=>e(g,this.remaining()));return f._timed_promise.parent=this,f}catch(d){const e=super.catch(!d||a(d)?d:f=>d(f,this.remaining()));return e._timed_promise.parent=this,e}}window.TimedPromise=c})();
